
services:
  ollama-server:
    image: ollama/ollama
    container_name: ollama-server
    ports:
      - "${LLM_ENDPOINT_PORT:-8008}:11434"
    volumes:
      - ${OLLAMA_DATA_PATH:-./app/data/ollama_data}:/root/.ollama



    environment:
      - no_proxy=${no_proxy}
      - http_proxy=${http_proxy}
      - https_proxy=${https_proxy}
      - LLM_MODEL_ID=${LLM_MODEL_ID}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    restart: unless-stopped              llm_text:
    build:
    ports:



    environment:
      - LLM_ENDPOINT=${LLM_ENDPOINT}
    depends_on:
      - ollama-server
    volumes:
      - ./comps/llm_t    volumes:    restart: unless-stopped

  embeddings:
    build:
      context: ./comps/embeddings
      dockerfile: Dockerfile
    container_name: embeddings
    ports:
      - "${EMBEDDING_SERVICE_PORT:-6000}:6000"
    environment:
      - EMBEDDING_SERVICE_HOST_IP=${EMBEDDING_SERVICE_HOST_IP:-0.0.0.0}
      - EMBEDDING_SERVICE_PORT=${EMBEDDING_SERVICE_PORT:-6000}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-all-MiniLM-L6-v2}
    volumes:
      - ./comps/embeddings:/app
      - ${SHARED_DB_PATH:-./app/data/shared_db}:/app/db
    restart: unless-stopped



    container_name: chromadb
  chromadb:
  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: chromadb
    volumes:ner_name: chromadb
    volumes:CHROMA_DATA_PATH:-./app/data/chroma_data}:/data
      - ${SHARED_DB_PATH:-./app/data/shared_db}:/app/db
    ports:
      - "${CHROMADB_PORT:-8050}:8050"
    restart: unless-stopped

  llm-vision:
    build:
      context: ./comps/llm-vision
      dockerfile: Dockerfile
    container_name: llm-vision
    ports:
      - "${LLM_VISION_PORT:-9100}:9100"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    environment:
      - VISION_MODEL_ID=${VISION_MODEL_ID:-llava}
    volumes:
      - ./comps/llm-vision:/app
      - ${SHARED_DB_PATH:-./app/data/shared_db}:/app/db
      - ${MANGAOCR_MODELS_PATH:-./app/data/mangaocr_models}:/app/mangaocr_models
    restart: unless-stopped

  tts:
    build:
      context: ./comps/tts
      dockerfile: Dockerfile
    container_name: tts
    ports:
      - "${TTS_SERVICE_PORT:-9200}:9200"
    volumes:
      - ./comps/tts:/app
      - ${SHARED_DB_PATH:-./app/data/shared_db}:/app/db
      - ${TTS_DATA_PATH:-./app/data/tts_data}:/home/tts/.xtts_data
    restart: unless-stopped

  asr:
    build:
      context: ./comps/asr
      dockerfile: Dockerfile
    container_name: asr
    ports:
      - "${ASR_SERVICE_PORT:-9300}:9300"
    volumes:
      - ./comps/asr:/app
      - ${SHARED_DB_PATH:-./app/data/shared_db}:/app/db
      - ${ASR_DATA_PATH:-./app/data/asr_data}:/home/asr/.xtts_data
    restart: unless-stopped

  guardrails:
    build:
      context: ./comps/guardrails
      dockerfile: Dockerfile
    container_name: guardrails
    ports:ls
    ports:E_PORT:-9400}:9400"
    volumes:
      - ./comps/guardrails:/app
      - ${SHARED_DB_PATH:-./app/data/shared_db}:/app/db
    restart: unless-stopped

