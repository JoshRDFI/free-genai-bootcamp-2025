# Japanese Learning Visual Novel - Architecture Diagram

+---------------------+     +---------------------+     +---------------------+
|                     |     |                     |     |                     |
|  Ren'Py Visual Novel|     |  Game Server        |     |  opea-docker API    |
|  (Client)           |     |  (API Gateway)      |     |  (Services)         |
|                     |     |                     |     |                     |
+----------+----------+     +----------+----------+     +----------+----------+
           |                            |                            |
           |                            |                            |
           |  API Requests              |  Service Requests          |
           +--------------------------->+--------------------------->+
           |                            |                            |
           |                            |                            |
           |  API Responses             |  Service Responses         |
           +<---------------------------+<---------------------------+
           |                            |                            |


# Component Details

## Ren'Py Visual Novel (Client)
- User interface and game logic
- Python scripts for game flow
- API communication module
- Progress tracking
- JLPT curriculum implementation

## Game Server (API Gateway)
- Flask web server
- Routes API requests to appropriate services
- Handles user authentication and session management
- Manages database operations
- Caches responses when appropriate

## opea-docker API (Services)
- LLM Text Service: Text generation, translation, conversation
- LLM Vision Service: Image understanding and description
- TTS Service: Text-to-speech conversion
- ASR Service: Speech-to-text transcription
- Image Generation Service: Backgrounds and character images
- Embeddings Service: Text embeddings for semantic search
- Database Service: User data and progress storage

# Data Flow

1. User interacts with the Ren'Py visual novel
2. Ren'Py sends API requests to the Game Server
3. Game Server routes requests to appropriate opea-docker services
4. opea-docker services process requests and return responses
5. Game Server formats and returns responses to Ren'Py
6. Ren'Py updates the game state and UI based on responses

# API Endpoints

## Game Server Endpoints
- /api/health: Health check
- /api/user: User management
- /api/progress: Progress tracking
- /api/tts: Text-to-speech generation
- /api/translate: Text translation
- /api/generate-conversation: Dynamic conversation generation
- /api/generate-image: Image generation
- /api/generate-lesson: Custom lesson generation
- /api/vocabulary: Vocabulary management

## opea-docker API Endpoints
- /llm/text: Text generation and processing
- /llm/vision: Image understanding
- /tts: Text-to-speech conversion
- /asr: Speech-to-text transcription
- /image/generate: Image generation
- /embeddings: Text embeddings
- /database: Database operations

# Deployment Architecture

+-------------------+     +-------------------+     +-------------------+
|                   |     |                   |     |                   |
|  Docker Container |     |  Docker Container |     |  Docker Container |
|  vn-game-server   |     |  vn-web-server   |     |  opea-api-gateway |
|                   |     |                   |     |                   |
+-------------------+     +-------------------+     +-------------------+
         |                         |                         |
         |                         |                         |
         +-------------------------+-------------------------+
                                   |
                                   | Docker Network
                                   |
         +-------------------------+-------------------------+
         |                         |                         |
+-------------------+     +-------------------+     +-------------------+
|                   |     |                   |     |                   |
|  Docker Container |     |  Docker Container |     |  Docker Container |
|  llm-text         |     |  tts              |     |  image-generation |
|                   |     |                   |     |                   |
+-------------------+     +-------------------+     +-------------------+