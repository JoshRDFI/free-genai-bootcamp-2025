Free GenAI BootCamp 2025
JPLT Language Tutor Project

free-genai-bootcamp-2025/
├── .venv-main/                # Main Python virtual environment
├── .git/                      # Git repository data
├── .vscode/                   # VSCode settings
├── launch.sh                  # Project launch script
├── project_start.py           # Main project startup script
├── first_start.py             # First-time setup script
├── download_models.py         # Script to download required models
├── README.md                  # Project overview and instructions
├── project-layout.txt         # This file (project structure)
├── requirements/              # Shared requirements files
├── data/                      # Shared data and model storage
│   ├── asr_data/                  # ASR model files
│   ├── cache/
│   │   └── writing-practice/      # Writing practice cache/logs
│   ├── chroma_data/
│   │   └── cache/
│   ├── embeddings/                # Embedding model data
│   ├── llava_vision/              # Vision model data
│   ├── llm_xtts/                  # XTTS model data
│   ├── mangaocr_models/           # MangaOCR model data
│   ├── ollama_data/
│   │   └── models/                # Ollama model files
│   ├── shared_db/                 # Shared SQLite DB and logs
│   ├── tts_data/
│   │   ├── tts/                   # TTS model files
│   │   └── voices/                # Voice audio files
│   ├── vocabulary_generator/      # Vocab generator data
│   └── waifu/                     # Waifu diffusion model data
├── listening-speaking/
│   ├── backend/
│   │   ├── app.py                 # Main backend entrypoint
│   │   ├── asr/                   # ASR engine
│   │   ├── llm/                   # LLM chat and question generator
│   │   ├── image/                 # Image generation
│   │   ├── tts/                   # TTS engine
│   │   ├── database/              # Knowledge base
│   │   ├── agent/                 # Task agent
│   │   ├── guardrails/            # Content filtering
│   │   ├── youtube/               # YouTube transcript extraction
│   │   ├── utils/                 # Helper functions
│   │   └── logs/                  # Backend logs
│   ├── data/                      # Audio, images, questions, transcripts
│   ├── frontend/                  # (if present) Frontend code
│   ├── run.py                     # Run frontend
│   └── README.md                  # Project overview
├── writing-practice/
│   ├── app.py                     # Main application script
│   ├── run_app.py                 # Alternate app runner
│   ├── api/                       # API endpoints
│   ├── src/
│   │   ├── api/                   # API logic
│   │   ├── core/                  # Core logic
│   │   ├── ui/                    # UI components/pages
│   │   └── utils/                 # Utility functions
│   ├── data/                      # Vocabulary and cache
│   ├── tests/                     # Tests
│   ├── images/                    # Image assets
│   └── README.md
├── vocabulary_generator/
│   ├── main.py                    # Main entrypoint
│   ├── src/
│   │   ├── generator.py           # Vocabulary generator
│   │   ├── sentence_gen.py        # Sentence generator
│   │   ├── database.py            # Database logic
│   │   ├── converter.py           # Data conversion
│   │   └── validator.py           # Data validation
│   ├── config/                    # Config files
│   ├── data/                      # Data imports/outputs
│   ├── tests/                     # Tests
│   └── readme.md
├── lang-portal/
│   ├── backend/
│   │   ├── api/                   # FastAPI backend
│   │   ├── db/                    # Database models/scripts
│   │   └── prompt-backend.md      # Backend prompt docs
│   ├── frontend/
│   │   └── src/
│   │       ├── components/        # React components
│   │       ├── pages/             # Page components
│   │       ├── services/          # API services
│   │       ├── types/             # Type definitions
│   │       └── utils/             # Utilities
│   ├── app.tsx                    # Main frontend app
│   ├── main.py                    # Main backend app
│   ├── langportal.db              # SQLite DB
│   └── README.md
├── opea-docker/
│   ├── docker-compose.yml         # Docker orchestration
│   ├── llm_text/                  # LLM text service
│   ├── llm-vision/                # LLM vision service
│   ├── tts/                       # TTS service
│   ├── asr/                       # ASR service
│   ├── guardrails/                # Guardrails service
│   ├── embeddings/                # Embeddings service
│   ├── chromadb/                  # ChromaDB service
│   ├── waifu-diffusion/           # Waifu diffusion service
│   ├── mangaocr/                  # MangaOCR service
│   ├── agent/                     # Agent service
│   └── README.md
├── visual-novel/
│   ├── curriculum/
│   │   ├── dialogues/             # Dialogue lessons
│   │   ├── grammar/               # Grammar lessons
│   │   └── vocabulary/            # Vocabulary lessons
│   ├── renpy/
│   │   └── game/                  # Ren'Py game files
│   ├── server/                    # Backend server
│   ├── web/                       # Web assets
│   ├── docker/                    # Docker files
│   └── README.md
├── Genai-Architecting/            # (contents not detailed)
├── Sentence-constructor/          # (contents not detailed)
